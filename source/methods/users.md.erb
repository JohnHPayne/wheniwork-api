> Example Object

<% json do %>
<%= print_json(data.objects['user']) %>
<% end %>

Users are the employees, supervisors, and managers that have access to your business on When I Work.


<%= print_table(data.objects['user'], :header => :user) %>

## Listing Users

> Example Request

```shell
curl <%=@api_prefix%>/2/users/?location_id=1 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->get("users");
?>
```
> Example Response

<% json do %>
{
  "users": [
    <%= print_json(data.objects['user'], :minimal => true) %>,
    <%= print_json(data.objects['user'], :minimal => true, :include => {
      'id' => 27384,
      'first_name' => 'Jennifer',
      'last_name' => 'Parker',
      'email' => 'jen.parker@example.com'
    }) %>
  ]
}
<% end %>

This method allows you to search for users. See the parameters below for all the options.

### HTTP Request
`GET <%=@api_prefix%>/2/users`

### Parameters

Key | Description
--- | -----------
<% param "location_id", "integer, string" do %>Only show shifts for a location, or multiple (e.g. 1,5,3).<% end %>
<% param "ids", "array" do %>Comma-separated array of IDs of users objects to retrieve (e.g. 9,17,42)<% end %>


## Get Existing User

> Example Request

```shell
curl <%=@api_prefix%>/2/users/1 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->get("users/1");
?>
```

> Example Response

<% json do %>
{
  "user": <%= print_json(data.objects['user'], :minimal => true, :include => {
    :notes => "This user excels at awesome."
  }) %>
}
<% end %>

### HTTP Request
`GET <%=@api_prefix%>/2/users/{id}`

### Parameters

Key | Description
--- | -----------
<% param "id" do %>ID of the user requested.<% end %>



## Create New User
> Example Request

```shell
curl <%=@api_prefix%>/2/users --data '{"first_name":"FirstName", "last_name": "LastName", "email": "user@email.com"}' -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("users/", array(
            "first_name"=>"Goldie",
            "last_name"=>"Wilson",
            "email"=>"goldiewilson@hillvalleycalifornia.gov"
        ));
?>
```

> Example Response

<% json do %>
{
  "user": <%= print_json(data.objects['user'], :minimal => true) %>
}
<% end %>

### HTTP Request

`POST <%=@api_prefix%>/2/users`

### Parameters

The `POST` body can include fields from the [User Object](#users). You will need
to include at least the 'email' field in the body of the request.

### Additional Params

Key | Description
--- | -----------
<% param "reactivate", "boolean" do %>Pass this to reactivate a previously deleted user.<% end %>

## Update Existing User

### HTTP Request
`PUT <%=@api_prefix%>/2/users/{id}`

### Parameters

The `PUT` body can include fields from the [User Object](#users).

### Additional Params

Key | Description
--- | -----------
<% param "reactivate", "boolean" do %>Pass this to reactivate a previously deleted user.<% end %>

## Update User Profile Settings

> Example Request

```shell

curl -X POST <%=@api_prefix%>/2/users/profile/ \
 --data '<%= print_json(data.objects['user_profile_settings']) %>' \
 -H "W-Token: <%=@wiw_token%>"

```

```php
$result = $wiw->post("users/alerts", <%= print_json_as_php_array(data.objects['user_profile_settings'],
                                       :include => {'first_name'=>'Jimmy',
                                                    'last_name'=>'Buffett',
                                                    'email'=>'parrothead1@margaritaville.com',
                                                    'phone_number'=>'+15552128716'}) %>);

```

> Example Response

<% json do %>
<%= print_json(data.objects['user'], :include => {
  'first_name' => 'Jimmy',
  'last_name' => 'Buffett',
  'email' => 'parrothead1@margaritaville.com',
  'phone_number' => '+15552128716'
}) %>
<% end %>

### HTTP Request

`POST <%=@api_prefix%>/2/users/profile`

### Parameters

The POST body can include fields from the User Profile Object:

<%= print_table(data.objects['user_profile_settings'], :header => :"user profile") %>

## Update User Alert Settings

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/users/alerts/ \
 --data '<%= print_json(data.objects['user_alert_settings']) %>' \
 -H "W-Token: <%=@wiw_token%>"
```

```php
$result = $wiw->post("users/alerts",
                     array("timeoff" => array("sms" => "true",
                                              "email" => "false")));
```
> Example Response

<% json do %>
{
  "success": true
}
<% end %>

### HTTP Request

`POST <%=@api_prefix%>/2/users/alerts`

### Parameters

The `POST` body can include fields from the Alert Settings Object.

<%= print_table(data.objects['user_alert_settings'], :header => :"user alert settings") %>

<%= print_table(data.objects['alert_setting'], :header => :"<a name=\"alertsetting\">alert setting</a>") %>

## Invite Users

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/users/invite/ \
 --data '{"ids":[14,15,67]}' \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("users/invite/", array("ids"=>array(14,15,67)));
?>
```

> Example Response

<% json do %>
{
  "count": 3,
  "email": 3,
  "sms": 1,
  "success": true
}
<% end %>

Users can be invited by managers, or by supervisors. This will send them an email or text message inviting them to register. Users must already be created to be invited.

### HTTP Request
`POST <%=@api_prefix%>/2/users/invite/`

### Parameters

Key | Description
--- | -----------
<% param "ids", "array" do %>List of IDs of users to invite.<% end %>
<% param "send_all", "boolean" do %>Invite all users without a login. `ids` parameter is ignored.<% end %>
<% param "message", "string" do %>An optional message to include in the email invite.<% end %>

You can also invite a single user with the following:

### HTTP Request
`POST <%=@api_prefix%>/2/users/invite/{id}`

### Parameters

Key | Description
--- | -----------
<% param "id", "integer" do %>The ID of the user to invite.<% end %>
<% param "message", "string" do %>An optional message to include in the email invite.<% end %>




## Delete User

> Example Request

```shell
curl -X DELETE <%=@api_prefix%>/2/users/4364 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->delete("users/4364");
?>
```

> Example Response

<% json do %>
{
  "success": true
}
<% end %>

Users can be deleted by managers, or by supervisors. If a supervisor is deleting the user, the supervisor must be able to manage all locations the user is attached to.

### HTTP Request
`DELETE <%=@api_prefix%>/2/users/{id}`

### Parameters

Key | Description
--- | -----------
<% param "id" do %>ID of the user to delete.<% end %>
