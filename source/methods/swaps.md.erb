> Example Object

<% json do %>
<%= print_json(data.objects['swap'], :verbose => true) %>
<% end %>

<%= print_table(data.objects['swap'], :header => :swap) %>


## Listing Swaps

> Example Request

```shell
curl <%=@api_prefix%>/2/swaps/ \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->get("swaps");
?>
```

> Example Response

<% json do %>
{
  "swaps": [
    <%= print_json(data.objects['swap']) %>
  ],
  "messages" : [
    <%= print_json(data.objects['message'], :include => {
      'swap_id' => '2238'
    }) %>
  ],
  "shifts" : [
    <%= print_json(data.objects['shift']) %>
  ],
  "users" : [
    <%= print_json(data.objects['user']) %>,
    <%= print_json(data.objects['user'], :include => {
      'id' => 27384,
      'first_name' => 'Emmett'
    }) %>
  ]
}
<% end %>

### HTTP Request
`GET <%=@api_prefix%>/2/swaps`

### Parameters

Key | Description
--- | -----------
<% param "open_only", "boolean" do %>Whether only open swaps should be included in the results.<% end %>
<% param "user_id", "integer, string array" do %>The ID of the user to get swaps for. For multiple users, enter a list of user IDs separated by commas (e.g. `1,5,3`).<% end %>
<% param "shift_id", "integer, string array" do %>The ID of the shift to get swaps for. For multiple shifts, enter a list of shift IDs separated by commas (e.g. `1,5,3`).<% end %>
<% param "status", "integer, string array" do %>The status or statuses of swaps that should be included in the results. For multiple statuses, enter a list separated by commas (e.g. `4,5`).<% end %>
<% param "type", "integer, string array" do %>The type or types of swaps that should be included in the results. For multiple types, enter a list separated by commas (e.g. `2,3`).<% end %>
<% param "start", "datetime" do %>Start time for the shift search window. Must be included if `end` is defined.<% end %>
<% param "end", "datetime" do %>End time for the shift search window. Must be included if `start` is defined.<% end %>
<% param "limit", "integer" do %>The number of swaps to include per page. Default is `10`.<% end %>
<% param "page", "integer" do %>The page of results to fetch. Default is `0`.<% end %>

## Get Existing Swap

> Example Request

```shell
curl <%=@api_prefix%>/2/swaps/22 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->get("swaps/22");
?>
```

> Example Response

<% json do %>
{
  "swaps": [
    <%= print_json(data.objects['swap']) %>
  ],
  "messages" : [
    <%= print_json(data.objects['message'], :include => {
      'swap_id' => '2238'
    }) %>
  ],
  "shifts" : [
    <%= print_json(data.objects['shift']) %>
  ],
  "users" : [
    <%= print_json(data.objects['user']) %>,
    <%= print_json(data.objects['user'], :include => {
      'id' => 27384,
      'first_name' => 'Emmett'
    }) %>
  ]
}
<% end %>

### HTTP Request
`GET <%=@api_prefix%>/2/swaps/{swap_id}`


### Parameters

Key | Description
--- | -----------
<% param "swap_id" do %>ID of the swap being requested.<% end %>


## Create/Update Swap
> Example Post Data

```json
{
    "shift_id":1046,
    "type": 3,
    "shifts":[1047],
    "users":[134,132,110]
}
```
> Example Request

```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->create("swaps", array(
                                 "shift_id" => 1046,
                                 "type" => 3,
                                 "shifts" => "1047",
                                 "users" => array(134,132,110)
                              ));
?>
```

> Example Response Object

<% json do %>
{
  "swaps": [
    <%= print_json(data.objects['swap']) %>
  ],
  "messages": [
    <%= print_json(data.objects['message'], :include => {
      'swap_id' => '2238'
    }) %>
  ],
  "shifts": [
    <%= print_json(data.objects['shift'], :include => {
      'id' => '1047'
    }) %>,
    <%= print_json(data.objects['shift'], :include => {
      'id' => '1046'
    }) %>
  ],
  "users": [
    <%= print_json(data.objects['user'], :include => {
      'id' => 134,
      'first_name' => 'Emmett',
      'last_name' => 'Brown'
    }) %>,
    <%= print_json(data.objects['user'], :include => {
      'id' => 132,
      'first_name' => 'Lorraine',
      'last_name' => 'Tannen'
    }) %>,
    <%= print_json(data.objects['user'], :include => {
      'id' => 110,
      'first_name' => 'Goldie',
      'last_name' => 'Wilson'
    }) %>
  ]
}
<% end %>




### Create HTTP Request
`POST <%=@api_prefix%>/2/swaps/`

Key | Description
--- | -----------
<% param "shift_id" do %>ID of the shift being swapped.<% end %>
<% param "type" do %>The type of swap to be created.<% end %>
<% param "shifts" do %>The IDs of the shifts requested to be swapped for.<% end %>
<% param "users" do %>The IDs of users available to take shifts.<% end %>


### Update HTTP Requests
`PUT <%=@api_prefix%>/2/swaps/{swap_id}`

### Parameters

The `POST` or `PUT` body can include fields from the [Swap Object](#swap).


## Delete Existing Swap

> Example Request

```shell
curl -X DELETE <%=@api_prefix%>/2/swap/233 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->delete("swap/233");
?>
```

> Example Response

<% json do %>
{
  "success": true
}
<% end %>

### HTTP Request
`DELETE <%=@api_prefix%>/2/swap/{swap_id}`

### Parameters

Key | Description
--- | -----------
<% param "swap_id" do %>ID of the swap to be deleted.<% end %>




