> Example Object

<% json do %>
<%= print_json(data.objects['shift'], :verbose => true) %>
<% end %>

Shifts provide the basis for scheduling. Many other objects, including Locations, Positions, Sites, and Users, all link through Shifts.


<%= print_table(data.objects['shift'], :header => :shift) %>

## Listing Shifts

> Example Request

```shell
curl <%=@api_prefix%>/2/shifts/?location_id=1&start=2014-03-05 00:00:00&end=2014-03-08 23:59:59 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->get("shifts", array(
                                "location_id" => 1, 
                                "start" => "2014-03-05 00:00:00",
                                "end" => "2014-03-08 23:59:59"
                              ));
?>
```

> Example Response

<% json do %>
{
  "start": "Wed, 05 Mar 2014 00:00:00 -0600",
  "end": "Sat, 08 Mar 2014 23:59:59 -0600",
  "shifts": [
    <%= print_json(data.objects['shift']) %>,
    <%= print_json(data.objects['shift'], :include=>{
      'id' => 27384,
      'start_time' => 'Sat, 08 Mar 2014 09:00:00 -0600',
      'end_time' => 'Sat, 08 Mar 2014 17:00:00 -0600'
    }) %>
  ]
}
<% end %>

This method allows you to search for shifts. See the parameters below for all the options.

### HTTP Request
`GET <%=@api_prefix%>/2/shifts`

### Parameters

Key | Description
--- | -----------
<% param "start", "datetime" do %>Start time for the search window. The default is the current date and time.<% end %>
<% param "end", "datetime" do %>End time for the search window. The default is exactly three days from the start time.<% end %>
<% param "user_id", "integer, string array" do %>The ID of the user to get shifts for. For multiple users, enter a list of user IDs separated by commas (e.g. `1,5,3`).<% end %>
<% param "location_id", "integer, string array" do %>The ID of the location to get shifts for. For multiple locations, enter a list of location IDs separated by commas.<% end %>
<% param "site_id", "integer, string array" do %>The ID of the site to get shifts for. For multiple sites, enter a list of site IDs separated by commas.<% end %>
<% param "position_id", "integer, string array" do %>The ID of the position to get shifts for. For multiple position, enter a list of position IDs separated by commas.<% end %>
<% param "include_open", "boolean" do %>Whether to include OpenShifts in the results.<% end %>
<% param "include_allopen", "boolean" do %>Whether to include OpenShifts in the results, including shifts that might be conflicts.<% end %>
<% param "include_onlyopen", "boolean" do %>Whether only OpenShifts should be included in the results.<% end %>
<% param "unpublished", "boolean" do %>Whether unpublished shifts should be included in the results.<% end %>

<% aside do %>
OpenShifts will be included in the results as long as either `include_allopen` or `include_onlyopen` is `true`.
<% end %>



## Get Existing Shift

> Example Request

```shell
curl <%=@api_prefix%>/2/shifts/1337 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->get("shifts/1337");
?>
```

> Example Response

<% json do %>
{
  "shift": <%= print_json(data.objects['shift'], :include => {
    :id => 1337,
    :notes => "Come in early today."
  }) %>
}
<% end %>

Gets the details of an existing shift.

### HTTP Request
`GET <%=@api_prefix%>/2/shifts/{id}`

### Parameters

Key | Description
--- | -----------
<% param "id", "integer" do %>The ID of the shift requested.<% end %>



## Create/Update Shift

Creates a new shift or updates an existing one.

> Example Request

```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");

// Create a shift
$result = $wiw->create("shifts", array(...));

// Update a shift
$result = $wiw->update("shifts/10000", array(...));
?>
```

> Example Response

<% json do %>
{
  "shift": <%= print_json(data.objects['shift'], :include => {
    :notes=>"Come in early today."
  }) %>
}
<% end %>

### Create HTTP Request
`POST <%=@api_prefix%>/2/shifts/`

### Update HTTP Requests
`PUT <%=@api_prefix%>/2/shifts/{id}`

### Post/Put Body

The `POST` or `PUT` body can include fields from the [Shift Object](#shifts).


## Acknowledge Shifts

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/shifts/acknowledge/ \
 --data '{"ids":[34542,45434]}' \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("shifts/acknowledge/", array(
  "ids" => array(
    34542,
    45434
  )
));
?>
```

> Example Response

<% json do %>
{
  "success": true,
  "acknowledged": 2
}
<% end %>

This method allows you to acknowledge a group of shifts.

### HTTP Request
`POST <%=@api_prefix%>/2/shifts/acknowledge/`

### Parameters

Key | Description
--- | -----------
<% param "ids", "integer array" do %>The IDs of the shifts to acknowledge. This parameter must be in the POST body.<% end %>


## Publish/Unpublish Shifts

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/shifts/publish/ \
 --data '{"ids":[1534,3543,65554,33444]}' \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("shifts/publish/", array(
  "ids" => array(
    1534,
    3543,
    65554,
    33444
  )
));
?>
```

> Example Response

<% json do %>
{
  "success": true
}
<% end %>

These methods allow you to publish or unpublish a group of shifts.

### HTTP Request
`POST <%=@api_prefix%>/2/shifts/publish/`

### HTTP Request
`POST <%=@api_prefix%>/2/shifts/unpublish/`


### Parameters

Key | Description
--- | -----------
<% param "ids", "integer array" do %>The IDs of the shifts to publish or unpublish. This parameter must be in the POST body.<% end %>



## Notify Shifts

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/shifts/notify/ \
 --data '{"start":"2014-05-16 00:00:00", "end":"2014-05-19 23:59:59"}' \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("shifts/notify/", array(
  "start" => "2014-05-16 00:00:00",
  "end" => "2014-05-19 23:59:59"
));
?>
```

> Example Response

<% json do %>
{
  "success": true,
  "email": 12,
  "sms": 4
}
<% end %>

This method allows you to notify users about new or updated shifts within a specific window.

### HTTP Request
`POST <%=@api_prefix%>/2/shifts/notify/`

### Parameters

Key | Description
--- | -----------
<% param "start", "datetime" do %>Start time for the notification window.<% end %>
<% param "end", "datetime" do %>End time for the notification window.<% end %>
<% param "user_id", "integer, integer array" do %>The ID of the user to notify. For multiple users, enter an array of user IDs (e.g. `[1,5,3]`).<% end %>
<% param "location_id", "integer, integer array" do %>The ID of the location to send notifications for. For multiple locations, enter an array of location IDs.<% end %>
<% param "site_id", "integer, integer array" do %>The ID of the site to send notifications for. For multiple sites, enter an array of site IDs.<% end %>
<% param "position_id", "integer, integer array" do %>The ID of the position to send notifications for. For multiple position, enter an array of position IDs.<% end %>

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/shifts/notify/47433 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("shifts/notify/47433");
?>
```

> Example Response

<% json do %>
{
  "success": true,
  "email": 1,
  "sms": 0
}
<% end %>

You can also send a notification about just one shift using the following:

### HTTP Request
`POST <%=@api_prefix%>/2/shifts/notify/{id}`

### Parameters

Key | Description
--- | -----------
<% param "id", "integer" do %>ID of the shift you want to send notifications about.<% end %>


## Delete Shift

> Example Request

```shell
curl -X DELETE <%=@api_prefix%>/2/shifts/1337 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->delete("shifts/1337");
?>
```

> Example Response

<% json do %>
{
  "success": true
}
<% end %>

Deletes an existing shift.

### HTTP Request
`DELETE <%=@api_prefix%>/2/shifts/{id}`

### Parameters

Key | Description
--- | -----------
<% param "id", "integer" do %>ID of the shift to delete.<% end %>
<% param "ids", "integer array" do %>Array of IDs of the shifts to delete.<% end %>

<% aside do %>
If the `id` parameter is present, it will take precedence over `ids`.
<% end %>





